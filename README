There are three functions in the program:

1: "write_reply" is a void function that reads data from the file stream and compiles a data package to be sent back to client.

2: "write_error" is a void function that compiles an error message, based on the value assigned to "error_code"

3: "main" is the main function that runs the server. When the main function is run, the server will bind to a port that was specificed and write an access path based on what path was provided. For example, if user imputs "tftpd 2000 data" the program will bind to port 2000 and create a file path "data\"
It will then begin listening on that port and enter an endless while loop.

When the program recieves a request from a client, it will read the opcode and enter a switch case, where handles the request based on aformentioned opcode.

In cases where it recieves a Read Request (opcode 1), the program will attempt to open requested file, based on predetermined file path. If file is not found, the program will assigned the value ERROR_CODE_1, indicating a "File Not Found" error and call the write_error function. Otherwise, if file is found, it will assignd the value "1" to block_code and call the write_reply function.

Handling Write Requests (opcode 2) has not been implemented, as requested by assignment. When a server sends a write request, the server will assign the value "ERROR_CODE_2" to error_code, indicating "Access Violation" and call the write_error function.

Similarly, if client ever attempts to send a Data package (opcode 3), "ERROR_CODE_4" will be assigned to error_code ("Illegal TFTP operation") and the write_error function is called.

When the server receives an Acknowledgment (opcode 4)
... TODO

Finally, error messages (opcode 5) 
... TODO

